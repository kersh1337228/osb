version: '3.9'

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - frontend

  django:
    container_name: django
    build:
      context: ./django
    stdin_open: true
    restart: always
    volumes:
      - ./next/public/static:/var/www/static
      - ./next/public/media:/var/www/media
    env_file: ./django/.env
    networks:
      - backend
      - frontend

  next:
    container_name: next
    build: 
      context: ./next
    stdin_open: true
    restart: always
    volumes:
      - /app/.next
      - ./next/public/static:/app/public/static
      - ./next/public/media:/app/public/media
    env_file: ./next/.env
    networks:
      - backend
      - frontend

  postgres:
    container_name: postgres
    build: 
      context: ./postgres
    restart: always
    volumes:
      - ./postgres/db:/var/lib/postgresql/data
    env_file: ./nginx/.env
    networks:
      - backend

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - frontend

networks:
  backend:
    name: backend
    driver: bridge
  frontend:
    name: frontend
    driver: bridge
